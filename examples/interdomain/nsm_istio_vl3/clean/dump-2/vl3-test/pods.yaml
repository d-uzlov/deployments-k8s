---
apiVersion: v1
items:
- metadata:
    annotations:
      kubectl.kubernetes.io/default-container: ubuntu
      kubectl.kubernetes.io/default-logs-container: ubuntu
      networkservicemesh.io: kernel://my-vl3-network/nsm-1?dnsName=ubuntu
      prometheus.io/path: /stats/prometheus
      prometheus.io/port: "15020"
      prometheus.io/scrape: "true"
      sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","credential-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
    creationTimestamp: "2022-12-22T00:23:20Z"
    generateName: ubuntu-deployment-584577c947-
    labels:
      app: ubuntu
      pod-template-hash: 584577c947
      security.istio.io/tlsMode: istio
      service.istio.io/canonical-name: ubuntu
      service.istio.io/canonical-revision: latest
      spiffe.io/spiffe-id: "true"
    name: ubuntu-deployment-584577c947-77dn2
    namespace: vl3-test
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ubuntu-deployment-584577c947
      uid: d022b472-b0f9-4205-bb16-acbefc026961
    resourceVersion: "5127"
    uid: e2281074-49b9-46b0-9872-c658393505ee
  spec:
    containers:
    - command:
      - sleep
      - "123456"
      image: ubuntu
      imagePullPolicy: Always
      name: ubuntu
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kbsv2
        readOnly: true
    - args:
      - proxy
      - sidecar
      - --domain
      - ""
      - --proxyLogLevel=warning
      - --proxyComponentLogLevel=misc:error
      - --log_output_level=default:info
      - --concurrency
      - "2"
      env:
      - name: JWT_POLICY
        value: third-party-jwt
      - name: PILOT_CERT_PROVIDER
        value: istiod
      - name: CA_ADDR
        value: istiod.istio-system.svc:15012
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        value: vm-ns
      - name: INSTANCE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SERVICE_ACCOUNT
        value: serviceaccountvm
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: PROXY_CONFIG
        value: |
          {}
      - name: ISTIO_META_POD_PORTS
        value: |-
          [
          ]
      - name: ISTIO_META_APP_CONTAINERS
        value: ubuntu
      - name: ISTIO_META_CLUSTER_ID
        value: Kubernetes
      - name: ISTIO_META_INTERCEPTION_MODE
        value: REDIRECT
      - name: ISTIO_META_MESH_ID
        value: cluster.local
      - name: TRUST_DOMAIN
        value: cluster.local
      image: docker.io/istio/proxyv2:1.16.0
      imagePullPolicy: IfNotPresent
      name: istio-proxy
      ports:
      - containerPort: 15090
        name: http-envoy-prom
        protocol: TCP
      readinessProbe:
        failureThreshold: 30
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        initialDelaySeconds: 1
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/istio/root-cert.pem
        name: cert
        subPath: root-cert.pem
      - mountPath: /var/lib/istio/envoy/cluster.env
        name: cert
        subPath: cluster.env
      - mountPath: /etc/istio/config/mesh
        name: cert
        subPath: mesh.yaml
      - mountPath: /var/run/secrets/tokens/istio-token
        name: cert
        subPath: istio-token
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kbsv2
        readOnly: true
    - env:
      - name: NSM_LOG_LEVEL
        value: TRACE
      - name: SPIFFE_ENDPOINT_SOCKET
        value: unix:///run/spire/sockets/agent.sock
      - name: NSM_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NSM_NETWORK_SERVICES
        value: kernel://my-vl3-network/nsm-1?dnsName=ubuntu
      image: ghcr.io/networkservicemesh/cmd-nsc:v1.7.0-rc.2
      imagePullPolicy: IfNotPresent
      name: cmd-nsc
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/spire/sockets
        name: spire-agent-socket
        readOnly: true
      - mountPath: /var/lib/networkservicemesh
        name: nsm-socket
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kbsv2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostAliases:
    - hostnames:
      - istiod.istio-system.svc
      ip: 172.16.0.2
    initContainers:
    - args:
      - istio-iptables
      - -p
      - "15001"
      - -z
      - "15006"
      - -u
      - "1337"
      - -m
      - REDIRECT
      - -i
      - '*'
      - -x
      - ""
      - -b
      - '*'
      - -d
      - 15090,15021,15020
      - --log_output_level=default:info
      image: docker.io/istio/proxyv2:1.16.0
      imagePullPolicy: IfNotPresent
      name: istio-init
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: false
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kbsv2
        readOnly: true
    - env:
      - name: NSM_LOG_LEVEL
        value: TRACE
      - name: SPIFFE_ENDPOINT_SOCKET
        value: unix:///run/spire/sockets/agent.sock
      - name: NSM_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NSM_NETWORK_SERVICES
        value: kernel://my-vl3-network/nsm-1?dnsName=ubuntu
      image: ghcr.io/networkservicemesh/cmd-nsc-init:v1.7.0-rc.2
      imagePullPolicy: IfNotPresent
      name: cmd-nsc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/spire/sockets
        name: spire-agent-socket
        readOnly: true
      - mountPath: /var/lib/networkservicemesh
        name: nsm-socket
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kbsv2
        readOnly: true
    nodeName: kind-1-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: cert-file
      name: cert
    - emptyDir: {}
      name: workload-socket
    - emptyDir: {}
      name: credential-socket
    - emptyDir: {}
      name: workload-certs
    - emptyDir:
        medium: Memory
      name: istio-envoy
    - emptyDir: {}
      name: istio-data
    - name: kube-api-access-kbsv2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
    - hostPath:
        path: /run/spire/sockets
        type: Directory
      name: spire-agent-socket
    - hostPath:
        path: /var/lib/networkservicemesh
        type: Directory
      name: nsm-socket
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-12-22T00:23:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-12-22T00:23:20Z"
      message: 'containers with unready status: [istio-proxy]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-12-22T00:23:20Z"
      message: 'containers with unready status: [istio-proxy]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-12-22T00:23:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2734f6d117e278507fa6c3d01e66eba99a8dfc101a88f80db70c383ce0ec9e6e
      image: ghcr.io/networkservicemesh/cmd-nsc:v1.7.0-rc.2
      imageID: ghcr.io/networkservicemesh/cmd-nsc@sha256:28bad4c7957cf62fc6637b5908904fe24768f24d24e6516c5e56209ab3a5b111
      lastState: {}
      name: cmd-nsc
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-12-22T00:23:33Z"
    - containerID: containerd://27d63ec392c131366ac13c047fab9fcda7ec69fc72cea1b1487b51ef75cf1712
      image: docker.io/istio/proxyv2:1.16.0
      imageID: docker.io/istio/proxyv2@sha256:f6f97fa4fb77a3cbe1e3eca0fa46bd462ad6b284c129cf57bf91575c4fb50cf9
      lastState: {}
      name: istio-proxy
      ready: false
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-12-22T00:23:33Z"
    - containerID: containerd://4841940145b9feb50f18e246e3c6efdab9c571818967b00138dec6274792f9f3
      image: docker.io/library/ubuntu:latest
      imageID: docker.io/library/ubuntu@sha256:27cb6e6ccef575a4698b66f5de06c7ecd61589132d5a91d098f7f3f9285415a9
      lastState: {}
      name: ubuntu
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-12-22T00:23:33Z"
    hostIP: 172.18.0.2
    initContainerStatuses:
    - containerID: containerd://7a48144b9f0bdf7b82e04cff164e0989fcfff79adffe36872865941356f8ffcf
      image: docker.io/istio/proxyv2:1.16.0
      imageID: docker.io/istio/proxyv2@sha256:f6f97fa4fb77a3cbe1e3eca0fa46bd462ad6b284c129cf57bf91575c4fb50cf9
      lastState: {}
      name: istio-init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://7a48144b9f0bdf7b82e04cff164e0989fcfff79adffe36872865941356f8ffcf
          exitCode: 0
          finishedAt: "2022-12-22T00:23:21Z"
          reason: Completed
          startedAt: "2022-12-22T00:23:21Z"
    - containerID: containerd://1049a5daf36c3ed2c3be54ea27bdd1d88b5d7602b0bb6eee08bd9185e664defa
      image: ghcr.io/networkservicemesh/cmd-nsc-init:v1.7.0-rc.2
      imageID: ghcr.io/networkservicemesh/cmd-nsc-init@sha256:abc32416a4667f54d1bd8b2891d2d08d2fbce612211214d763c7301760555b52
      lastState: {}
      name: cmd-nsc-init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://1049a5daf36c3ed2c3be54ea27bdd1d88b5d7602b0bb6eee08bd9185e664defa
          exitCode: 0
          finishedAt: "2022-12-22T00:23:30Z"
          reason: Completed
          startedAt: "2022-12-22T00:23:22Z"
    phase: Running
    podIP: 10.244.0.19
    podIPs:
    - ip: 10.244.0.19
    qosClass: Burstable
    startTime: "2022-12-22T00:23:20Z"
kind: PodList
metadata:
  resourceVersion: "5267"

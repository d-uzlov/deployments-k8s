
 1401* ../delete-cluster.sh; ../create-cluster.sh; ../init-multicluster-2.sh
 1402  kubectl --kubeconfig=$KUBECONFIG1 apply -k ./vl3-dns\nsleep 0.5\nkubectl --kubeconfig=$KUBECONFIG1 -n ns-dns-vl3 wait --for=condition=ready --timeout=1m pod -l app=nse-vl3-vpp\nkubectl --kubeconfig=$KUBECONFIG1 -n ns-dns-vl3 wait --for=condition=ready --timeout=1m pod -l app=vl3-ipam\n
 1403  kubectl --kubeconfig=$KUBECONFIG1 apply -f istio-namespace.yaml\nistioctl install --set profile=minimal -y --kubeconfig=$KUBECONFIG1 --set meshConfig.accessLogFile=/dev/stdout\nk1 exec -n istio-system deployments/istiod -c cmd-nsc -- apk add tcpdump\n
 1404  WORK_DIR="$(git rev-parse --show-toplevel)/examples/interdomain/nsm_istio_vl3/clean/istio-vm-configs"\nVM_APP="vm-app"\nVM_NAMESPACE="vm-ns"\nSERVICE_ACCOUNT="serviceaccountvm"\nCLUSTER_NETWORK=""\nVM_NETWORK=""\nCLUSTER="Kubernetes"\n
 1405  kubectl --kubeconfig=$KUBECONFIG1 create namespace "${VM_NAMESPACE}"\nkubectl --kubeconfig=$KUBECONFIG1 create serviceaccount "${SERVICE_ACCOUNT}" -n "${VM_NAMESPACE}"\n
 1406  k1 exec -n istio-system deployments/istiod -c cmd-nsc -- ip a
 1407  time k1 exec -n istio-system deployments/istiod -c cmd-nsc -- tcpdump -i nsm-1 -U -w - >1-istio-standard.pcap &\nsleep 1\nk1 apply -k ubuntu-standard\nsleep 0.5\nk1 -n vl3-test wait --for=condition=ready --timeout=1m pod -l app=ubuntu\nsleep 1\nkill -2 $!\nsleep 1\nk1 delete -k ubuntu-standard\ntshark -r 1-istio-standard.pcap\n
 1408  istioctl x workload entry configure -f workloadgroup.yaml -o "${WORK_DIR}" --clusterID "${CLUSTER}" --kubeconfig=$KUBECONFIG1 --ingressIP=172.16.0.2\n# sed -i '' 's/15012/15010/' "${WORK_DIR}/mesh.yaml"\nrm -rf ubuntu-standard/istio-vm-configs\nrm -rf ubuntu-hosts/istio-vm-configs\nrm -rf ubuntu-hosts-2/istio-vm-configs\nrm -rf ubuntu-hosts-2-vmlike/istio-vm-configs\ncp -r "${WORK_DIR}" ubuntu-standard/istio-vm-configs\ncp -r "${WORK_DIR}" ubuntu-hosts/istio-vm-configs\ncp -r "${WORK_DIR}" ubuntu-hosts-2/istio-vm-configs\ncp -r "${WORK_DIR}" ubuntu-hosts-2-vmlike/istio-vm-configs\n
 1409  time k1 exec -n istio-system deployments/istiod -c cmd-nsc -- tcpdump -i nsm-1 -U -w - >4-istio-tcpdump-1-nsm.pcap &\nsleep 1\nk1 apply -k ubuntu-hosts\nsleep 0.5\nk1 -n vl3-test wait --for=condition=ready --timeout=1m pod -l app=ubuntu\nk1 -n vl3-test get pod\n# k1 -n vl3-test exec deployments/ubuntu-deployment -c istio-proxy -- curl 172.16.0.2:8080/ready -vs\nsleep 1\nkill -2 $!\ntime k1 exec -n istio-system deployments/istiod -c cmd-nsc -- tcpdump -i nsm-1 -U -w - >4-istio-tcpdump-2-nsm.pcap\nsleep 1\nk1 delete -k ubuntu-hosts\ntshark -r 4-istio-tcpdump-1-nsm.pcap
 1410  k1 delete -k ubuntu-hosts
 1411  time k1 exec -n istio-system deployments/istiod -c cmd-nsc -- tcpdump -i nsm-1 -U -w - >4-istio-tcpdump-1-nsm.pcap &\nsleep 1\nk1 apply -k ubuntu-hosts\nsleep 0.5\nk1 -n vl3-test wait --for=condition=ready --timeout=1m pod -l app=ubuntu\nk1 -n vl3-test get pod\nk1 -n vl3-test exec deployments/ubuntu-deployment -c istio-proxy -- curl 172.16.0.2:8080/ready -vs\nsleep 1\nkill -2 $!\n# time k1 exec -n istio-system deployments/istiod -c cmd-nsc -- tcpdump -i nsm-1 -U -w - >4-istio-tcpdump-2-nsm.pcap\nsleep 1\nk1 delete -k ubuntu-hosts\ntshark -r 4-istio-tcpdump-1-nsm.pcap\n# tshark -r 4-istio-tcpdump-2-nsm.pcap\n
 1412  jobs
 1413  time k1 exec -n istio-system deployments/istiod -c cmd-nsc -- tcpdump -i nsm-1 -U -w - >4-istio-tcpdump-1-nsm.pcap &\nsleep 1\nk1 apply -k ubuntu-hosts\nsleep 0.5\nk1 -n vl3-test wait --for=condition=ready --timeout=1m pod -l app=ubuntu\nk1 -n vl3-test get pod\nk1 -n vl3-test exec deployments/ubuntu-deployment -c istio-proxy -- curl 172.16.0.2:8080/ready -vs\nsleep 1\nkill -2 $!\n# time k1 exec -n istio-system deployments/istiod -c cmd-nsc -- tcpdump -i nsm-1 -U -w - >4-istio-tcpdump-2-nsm.pcap\nsleep 1\nk1 delete -k ubuntu-hosts
 1414  k1 cluster-info dump --output yaml --output-directory dump-2 --all-namespaces
 1415  cp ~/.bash_history .
 1416  cp ~/.zsh_history .
 1417  history 0

---
apiVersion: apps/v1
items:
- metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2022-12-05T08:41:32Z"
    generation: 1
    labels:
      app: istio-eastwestgateway
      chart: gateways
      heritage: Tiller
      install.operator.istio.io/owning-resource: unknown
      istio: eastwestgateway
      operator.istio.io/component: IngressGateways
      pod-template-hash: 586ff4f54f
      release: istio
      sidecar.istio.io/inject: "true"
    name: istio-eastwestgateway-586ff4f54f
    namespace: istio-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: istio-eastwestgateway
      uid: 1c41d625-dfc3-44db-9917-b34a4c894b4d
    resourceVersion: "14624"
    uid: 98c4c174-f2ef-44e8-87f0-ea9ebc7ef850
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: istio-eastwestgateway
        istio: eastwestgateway
        pod-template-hash: 586ff4f54f
    template:
      metadata:
        annotations:
          inject.istio.io/templates: gateway
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/inject: "true"
        creationTimestamp: null
        labels:
          app: istio-eastwestgateway
          chart: gateways
          heritage: Tiller
          install.operator.istio.io/owning-resource: unknown
          istio: eastwestgateway
          operator.istio.io/component: IngressGateways
          pod-template-hash: 586ff4f54f
          release: istio
          sidecar.istio.io/inject: "true"
      spec:
        affinity:
          nodeAffinity: {}
        containers:
        - env:
          - name: ISTIO_META_UNPRIVILEGED_POD
            value: "true"
          image: auto
          imagePullPolicy: Always
          name: istio-proxy
          ports:
          - containerPort: 15021
            protocol: TCP
          - containerPort: 15443
            protocol: TCP
          - containerPort: 15012
            protocol: TCP
          - containerPort: 15017
            protocol: TCP
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: true
            capabilities: {}
            privileged: true
            readOnlyRootFilesystem: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/istio/ingressgateway-certs
            name: ingressgateway-certs
            readOnly: true
          - mountPath: /etc/istio/ingressgateway-ca-certs
            name: ingressgateway-ca-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
          runAsGroup: 1337
          runAsNonRoot: true
          runAsUser: 1337
        serviceAccount: istio-eastwestgateway-service-account
        serviceAccountName: istio-eastwestgateway-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ingressgateway-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: istio-ingressgateway-certs
        - name: ingressgateway-ca-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: istio-ingressgateway-ca-certs
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-12-05T07:12:44Z"
    generation: 2
    labels:
      app: istio-eastwestgateway
      chart: gateways
      heritage: Tiller
      install.operator.istio.io/owning-resource: unknown
      istio: eastwestgateway
      operator.istio.io/component: IngressGateways
      pod-template-hash: 64b86b4c46
      release: istio
      sidecar.istio.io/inject: "true"
    name: istio-eastwestgateway-64b86b4c46
    namespace: istio-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: istio-eastwestgateway
      uid: 1c41d625-dfc3-44db-9917-b34a4c894b4d
    resourceVersion: "14635"
    uid: 825c0ab3-192f-48a5-984f-5fb83b5a0f8d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: istio-eastwestgateway
        istio: eastwestgateway
        pod-template-hash: 64b86b4c46
    template:
      metadata:
        annotations:
          inject.istio.io/templates: gateway
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/inject: "true"
        creationTimestamp: null
        labels:
          app: istio-eastwestgateway
          chart: gateways
          heritage: Tiller
          install.operator.istio.io/owning-resource: unknown
          istio: eastwestgateway
          operator.istio.io/component: IngressGateways
          pod-template-hash: 64b86b4c46
          release: istio
          sidecar.istio.io/inject: "true"
      spec:
        affinity:
          nodeAffinity: {}
        containers:
        - env:
          - name: ISTIO_META_UNPRIVILEGED_POD
            value: "true"
          image: auto
          imagePullPolicy: Always
          name: istio-proxy
          ports:
          - containerPort: 15021
            protocol: TCP
          - containerPort: 15443
            protocol: TCP
          - containerPort: 15012
            protocol: TCP
          - containerPort: 15017
            protocol: TCP
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/istio/ingressgateway-certs
            name: ingressgateway-certs
            readOnly: true
          - mountPath: /etc/istio/ingressgateway-ca-certs
            name: ingressgateway-ca-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
          runAsGroup: 1337
          runAsNonRoot: true
          runAsUser: 1337
        serviceAccount: istio-eastwestgateway-service-account
        serviceAccountName: istio-eastwestgateway-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ingressgateway-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: istio-ingressgateway-certs
        - name: ingressgateway-ca-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: istio-ingressgateway-ca-certs
  status:
    observedGeneration: 2
    replicas: 0
- metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-12-05T07:11:24Z"
    generation: 1
    labels:
      app: istio-ingressgateway
      chart: gateways
      heritage: Tiller
      install.operator.istio.io/owning-resource: unknown
      istio: ingressgateway
      istio.io/rev: default
      operator.istio.io/component: IngressGateways
      pod-template-hash: 6795c6c98d
      release: istio
      service.istio.io/canonical-name: istio-ingressgateway
      service.istio.io/canonical-revision: latest
      sidecar.istio.io/inject: "false"
    name: istio-ingressgateway-6795c6c98d
    namespace: istio-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: istio-ingressgateway
      uid: e404c92f-1c00-45a9-8b09-0a676c150ce5
    resourceVersion: "3139"
    uid: 9e7258bf-cdc1-4483-892f-2c72ccbe0ac3
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: istio-ingressgateway
        istio: ingressgateway
        pod-template-hash: 6795c6c98d
    template:
      metadata:
        annotations:
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/inject: "false"
        creationTimestamp: null
        labels:
          app: istio-ingressgateway
          chart: gateways
          heritage: Tiller
          install.operator.istio.io/owning-resource: unknown
          istio: ingressgateway
          istio.io/rev: default
          operator.istio.io/component: IngressGateways
          pod-template-hash: 6795c6c98d
          release: istio
          service.istio.io/canonical-name: istio-ingressgateway
          service.istio.io/canonical-revision: latest
          sidecar.istio.io/inject: "false"
      spec:
        affinity:
          nodeAffinity: {}
        containers:
        - args:
          - proxy
          - router
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          env:
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.serviceAccountName
          - name: ISTIO_META_WORKLOAD_NAME
            value: istio-ingressgateway
          - name: ISTIO_META_OWNER
            value: kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway
          - name: ISTIO_META_MESH_ID
            value: mesh1
          - name: TRUST_DOMAIN
            value: cluster.local
          - name: ISTIO_META_UNPRIVILEGED_POD
            value: "true"
          - name: ISTIO_META_CLUSTER_ID
            value: Kubernetes
          image: docker.io/istio/proxyv2:1.16.0
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          ports:
          - containerPort: 15021
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/secrets/workload-spiffe-uds
            name: workload-socket
          - mountPath: /var/run/secrets/credential-uds
            name: credential-socket
          - mountPath: /var/run/secrets/workload-spiffe-credentials
            name: workload-certs
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /etc/istio/config
            name: config-volume
          - mountPath: /var/run/secrets/istio
            name: istiod-ca-cert
          - mountPath: /var/run/secrets/tokens
            name: istio-token
            readOnly: true
          - mountPath: /var/lib/istio/data
            name: istio-data
          - mountPath: /etc/istio/pod
            name: podinfo
          - mountPath: /etc/istio/ingressgateway-certs
            name: ingressgateway-certs
            readOnly: true
          - mountPath: /etc/istio/ingressgateway-ca-certs
            name: ingressgateway-ca-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
          runAsGroup: 1337
          runAsNonRoot: true
          runAsUser: 1337
        serviceAccount: istio-ingressgateway-service-account
        serviceAccountName: istio-ingressgateway-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: workload-socket
        - emptyDir: {}
          name: credential-socket
        - emptyDir: {}
          name: workload-certs
        - configMap:
            defaultMode: 420
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - downwardAPI:
            defaultMode: 420
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations
              path: annotations
          name: podinfo
        - emptyDir: {}
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - name: istio-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - configMap:
            defaultMode: 420
            name: istio
            optional: true
          name: config-volume
        - name: ingressgateway-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: istio-ingressgateway-certs
        - name: ingressgateway-ca-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: istio-ingressgateway-ca-certs
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-12-05T07:11:05Z"
    generation: 1
    labels:
      app: istiod
      install.operator.istio.io/owning-resource: unknown
      istio: pilot
      istio.io/rev: default
      operator.istio.io/component: Pilot
      pod-template-hash: 5d74c58fdd
      sidecar.istio.io/inject: "false"
    name: istiod-5d74c58fdd
    namespace: istio-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: istiod
      uid: 571ea940-d2c2-4e36-9718-c7899418f453
    resourceVersion: "3050"
    uid: 4e960eb8-28dc-4f17-974e-091969ea4056
  spec:
    replicas: 1
    selector:
      matchLabels:
        istio: pilot
        pod-template-hash: 5d74c58fdd
    template:
      metadata:
        annotations:
          prometheus.io/port: "15014"
          prometheus.io/scrape: "true"
          sidecar.istio.io/inject: "false"
        creationTimestamp: null
        labels:
          app: istiod
          install.operator.istio.io/owning-resource: unknown
          istio: pilot
          istio.io/rev: default
          operator.istio.io/component: Pilot
          pod-template-hash: 5d74c58fdd
          sidecar.istio.io/inject: "false"
      spec:
        containers:
        - args:
          - discovery
          - --monitoringAddr=:15014
          - --log_output_level=default:info
          - --domain
          - cluster.local
          - --keepaliveMaxServerConnectionAge
          - 30m
          env:
          - name: REVISION
            value: default
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.serviceAccountName
          - name: KUBECONFIG
            value: /var/run/secrets/remote/config
          - name: PILOT_TRACE_SAMPLING
            value: "1"
          - name: PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND
            value: "true"
          - name: PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND
            value: "true"
          - name: ISTIOD_ADDR
            value: istiod.istio-system.svc:15012
          - name: PILOT_ENABLE_ANALYSIS
            value: "false"
          - name: CLUSTER_ID
            value: Kubernetes
          image: docker.io/istio/pilot:1.16.0
          imagePullPolicy: IfNotPresent
          name: discovery
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 15010
            protocol: TCP
          - containerPort: 15017
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 500m
              memory: 2Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/secrets/tokens
            name: istio-token
            readOnly: true
          - mountPath: /var/run/secrets/istio-dns
            name: local-certs
          - mountPath: /etc/cacerts
            name: cacerts
            readOnly: true
          - mountPath: /var/run/secrets/remote
            name: istio-kubeconfig
            readOnly: true
          - mountPath: /var/run/secrets/istiod/tls
            name: istio-csr-dns-cert
            readOnly: true
          - mountPath: /var/run/secrets/istiod/ca
            name: istio-csr-ca-configmap
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: istiod
        serviceAccountName: istiod
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: local-certs
        - name: istio-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - name: cacerts
          secret:
            defaultMode: 420
            optional: true
            secretName: cacerts
        - name: istio-kubeconfig
          secret:
            defaultMode: 420
            optional: true
            secretName: istio-kubeconfig
        - name: istio-csr-dns-cert
          secret:
            defaultMode: 420
            optional: true
            secretName: istiod-tls
        - configMap:
            defaultMode: 420
            name: istio-ca-root-cert
            optional: true
          name: istio-csr-ca-configmap
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: ReplicaSetList
metadata:
  resourceVersion: "15776"
